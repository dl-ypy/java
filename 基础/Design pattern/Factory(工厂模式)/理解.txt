对java工厂模式的理解（参考五月的仓颉的博客）

用意：定义一个创建产品对象的工厂接口，将实际创建工厂推迟到子类中 （如创建交通工具工厂的接口，将具体的实现推迟到实现了该接口的汽车工厂等子类中）




三种工厂模式
1. 简单工厂模式(Simple Factory)
2. 工厂方法模式(Factory Method)
3. 抽象工厂模式(Abstract Factory)




使用工厂方法模式的系统涉及到以下角色：

1、抽象工厂角色（如创建交通工具工厂的接口）

担任这个角色的是工厂方法模式的核心，任何在模式中创建对象的工厂类必须实现这个接口

2、具体工厂角色（如创建汽车的工厂类）

担任这个角色的是实现了工厂接口的具体Java类，具体工厂角色与业务密切相关，并且随着使用者的调用以创建导出类

3、抽象导出角色（如交通工具类）

工厂方法模式所创建的对象的超类

4、具体导出角色（如具体的汽车类）

这个角色实现了抽象导出角色所声明的接口，工厂方法模式所创建的每一个对象都是某个具体角色导出角色的实例



降低耦合度，提高代码的维护性和扩展性。